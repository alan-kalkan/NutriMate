generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Category {
  id          String    @id @db.VarChar(255) @unique
  name        String    @db.VarChar(255) @unique
  description String?   @db.VarChar(1000)
  products    ProductCategory[] // References join table ProductCategory for many-to-many relationship with Product
}

model Brand {
  id          String    @id @db.VarChar(255) @unique
  name        String    @db.VarChar(255) @unique
  description String?   @db.VarChar(1000)
  products    Product[] // References join table ProductCategory for many-to-many relationship with Product
}

model Product {
  id          String            @id @db.VarChar(255) @unique
  name        String            @db.VarChar(255) @unique
  description String?           @db.VarChar(1000)
  treatmentDuration Int?          @db.Int()
  price       Decimal           @db.Decimal(10, 2)
  image_url   String?           @db.VarChar(1000)
  created_at  DateTime          @db.Timestamp(0)
  brand       Brand?            @relation(fields: [brand_id], references: [id], onDelete: Cascade)
  brand_id    String?           @db.VarChar(255)
  categories  ProductCategory[] // References join table ProductCategory for many-to-many relationship with Category
}

model ProductCategory {
  product_id  String   @map("product_id")
  category_id String   @map("category_id")
  product     Product  @relation(fields: [product_id], references: [id], onDelete: Cascade)
  category    Category @relation(fields: [category_id], references: [id], onDelete: Cascade)

  @@id([product_id, category_id]) // Composite primary key to ensure uniqueness of each pair
}

model User {
  id         String    @id @unique(map: "id_UNIQUE") @db.VarChar(255)
  name       String    @db.VarChar(255)
  last_name  String    @db.VarChar(255)
  gender     String    @db.VarChar(255) @default("null")
  email      String    @unique(map: "email_UNIQUE") @db.VarChar(255)
  password   String    @db.VarChar(255)
  created_at DateTime? @db.Timestamp(0)
}